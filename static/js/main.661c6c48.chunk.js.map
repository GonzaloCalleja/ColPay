{"version":3,"sources":["components/mainComponents/LandingPage.js","components/mainComponents/Drawer.js","components/smallComponents/Title.js","components/smallComponents/SingleFieldCard.js","components/smallComponents/TwoFieldCard.js","components/smallComponents/ContractsAndTransactionsTable.js","components/mainComponents/MyAccount.js","components/mainComponents/ContractsOverview.js","components/mainComponents/ContractsReview.js","components/smallComponents/TransactionsTable.js","components/mainComponents/TransactionsOverview.js","components/smallComponents/RecipientCard.js","components/mainComponents/RecipientsOverview.js","components/smallComponents/ContractDurationForm.js","components/smallComponents/ContractRecipientForm.js","components/smallComponents/ContractReviewForm.js","components/smallComponents/ContractSpeedForm.js","components/smallComponents/ContractCreateStepper.js","components/mainComponents/ContractCreate.js","components/mainComponents/RequestTransaction.js","components/mainComponents/RecurringTransactions.js","components/smallComponents/Chart.js","components/smallComponents/Deposits.js","components/mainComponents/Trends.js","components/mainComponents/ColPayAppLogic.js","components/mainComponents/Navbar.js","components/mainComponents/Footer.js","components/smallComponents/ScrollToTop.js","components/App.js","serviceWorker.js","theme.js","index.js"],"names":["useStyles","makeStyles","theme","toolbar","mixins","heroContent","backgroundColor","palette","primary","main","padding","spacing","heroButtons","marginTop","LandingPage","classes","Grid","container","direction","item","className","id","xs","Paper","elevation","square","Typography","color","variant","Container","maxWidth","component","align","gutterBottom","paragraph","root","display","drawer","breakpoints","up","width","drawerWidth","flexShrink","minHeight","drawerPaper","drawerText","paddingLeft","hoverList","background","borderLeft","selected","accountText","fontSize","typography","body1","fontWeight","fontWeightMedium","drawerTitle","body2","drawerIcon","minWidth","Drawer","window","mobileOpen","handleDrawerToggle","paths","history","useHistory","useTheme","undefined","document","body","useState","accountSelected","setAccountSelected","createContractSelected","setCreateContractSelected","reviewSelected","setReviewSelectedSelected","setUploadSelectedSelected","requestPaymentSelected","setRequestPaymentSelected","recurrentTransactionSelected","setRecurrentTransactionSelected","transactionOverviewSelected","setTransactionOverviewSelected","recipientsSelected","setRecipientsSelected","contractsOverviewSelected","setContractsOverviewSelected","moreSelected","setMoreSelected","itemsList","text","icon","button","state","onClick","push","appMain","ListItemIcon","appCreateContract","appReviewContract","appRequest","appRecurring","appContractsOverview","appTransactions","appRecipients","appMore","ListItems","List","map","index","ListItem","dense","ListItemText","Hidden","smUp","implementation","anchor","open","onClose","paper","ModalProps","keepMounted","xsDown","divider","marginBottom","Title","title","sm","md","Divider","pos","marginLeft","description","SingleFieldCard","value","unit","action","Card","CardContent","CardActions","Button","size","height","TwoFieldCard","potentialDebt","incurredDebt","noWrap","useRowStyles","borderBottom","reject","columntile","flexDirection","StyledTableCell","withStyles","head","common","white","TableCell","StyledTableRow","hover","TableRow","Row","props","row","allStatusValues","reviewTable","onAccept","onReject","account","React","setOpen","Fragment","NotReviewed","statusName","Rejected","IconButton","toString","name","totalEther","paidEther","partnerName","startDateFormat","expiryDateFormat","speed","daysToOpen","recipient","recipientName","style","paddingBottom","paddingTop","colSpan","Collapse","in","timeout","unmountOnExit","Box","margin","transactions","length","Table","aria-label","TableHead","TableBody","transaction","key","scope","dateFormat","successful","valueEther","Math","round","ContractsAndTransactionsTable","contracts","statusValues","TableContainer","contract","includes","flexGrow","mainGrid","subtitle","MyAccount","balance","isBlocked","activeContracts","i","Accepted","cards","card","ContractsOverview","Fulfilled","MissingPayments","selectedStatus","setSelectedStatus","setState","handleChange","event","target","checked","statuses","splice","indexOf","console","log","FormGroup","FormControlLabel","control","Checkbox","onChange","label","ContractsReview","black","table","TransactionsTable","contractTransactions","j","seller","contractName","TransactionsOverview","RecipientCard","RecipientsOverview","recipients","recipientNumber","status","recipientIncludedId","partner","lg","textField","marginRight","ContractDurationForm","contractArguments","TextField","type","defaultValue","startDate","InputLabelProps","shrink","required","expiryDate","formControl","ContractRecipientForm","AccountsToName","placeholder","fullWidth","autoComplete","FormControl","InputLabel","Select","Object","entries","address","MenuItem","FormHelperText","totalAmount","listItem","total","sectionTitle","ContractReviewForm","classsName","createdBySeller","rightText","textAlign","fontWeightBold","ContractSpeedForm","actionsContainer","resetContainer","StepperContract","onCreateContract","setContractArgumentsrguments","activeStep","setActiveStep","steps","handleNext","prevActiveStep","input","e","values","handleBack","handleSubmit","preventDefault","totalPrice","web3","utils","toWei","start","floor","Date","parse","expire","alert","getStepContent","step","Stepper","orientation","Step","StepLabel","StepContent","disabled","ContractCreate","buttonGrid","justifyContent","alignItems","RequestTransaction","onTransaction","contractId","setContractId","setValue","etherValue","low","large","stepper","RecurringTransaction","Avatar","alt","src","createData","time","amount","data","Chart","ResponsiveContainer","LineChart","top","right","bottom","left","XAxis","stroke","secondary","YAxis","Label","angle","position","textAnchor","fill","Line","dataKey","dot","depositContext","flex","Deposits","Link","href","fixedHeightPaper","overflow","Trends","ColPayAppLogic","onLoadAccount","accountName","colPay","setColPay","cpToken","setCPToken","setCPTokenBalance","setAccount","setContracts","setIsBlocked","setIncurredDebt","setPotentialDebt","balanceEther","setBalanceEther","incurredDebtEther","setIncurredDebtEther","potentialDebtEther","setPotentailDebtEther","loading","setLoading","reload","setReload","statusEnumValues","0","1","2","3","4","useEffect","a","loadWeb3","loadSmartContracts","eth","getAccounts","accounts","getBlockChainData","methods","balanceOf","call","cpTokenBalance","fromWei","getContractNumber","contractCount","contractsToUpdate","paymentContractsHeldPerAddress","contractID","paymentContracts","amountPaid","startMonth","getMonth","getDate","getFullYear","expires","endMonth","getTransactionNumber","transactionsCount","transactionLists","date","dateMonth","buyer","getAccountData","ethereum","Web3","currentProvider","net","getId","networkId","Contract","CPToken","abi","networks","error","ColPay","createPaymentContract","send","from","once","receipt","acceptContract","acceptPaymentContract","rejectContract","rejectPaymentContract","makeTransaction","location","pathname","render","to","appMyAccount","exact","path","RecurringTransactions","appTrends","grow","zIndex","hide","tabs","sectionDesktop","navLink","idMenuItem","menuButton","Navbar","anchorEl","setAnchorEl","home","setShowLandingPage","showLandingPage","selectedTab","setSelectedTab","isMenuOpen","Boolean","handleMenuClose","menuId","renderMenu","Menu","TransitionComponent","dropDown","anchorOrigin","vertical","horizontal","transformOrigin","RouterLink","AppBar","Toolbar","edge","textDecoration","Tabs","newSelectedTab","Tab","ScrollLink","activeClass","spy","smooth","offset","duration","classNames","appHelp","wrapper","iconLabelWrapper","labelContainer","aria-controls","aria-haspopup","currentTarget","endIcon","Copyright","ul","listStyle","grey","borderTop","footer","footers","Pricing","justify","mt","ScrollToTop","useLocation","scrollTo","App","setAccountName","appMyProfile","appUpload","newAccount","setMobileOpen","CssBaseline","hostname","match","createMuiTheme","rootElement","getElementById","ReactDOM","StrictMode","ThemeProvider","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.661c6c48.chunk.js","sourcesContent":["import { Typography, Paper, Grid, Container } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n    toolbar: theme.mixins.toolbar,\n    heroContent: {\n        backgroundColor: theme.palette.primary.main,\n        padding: theme.spacing(5, 0, 10),\n      },\n      heroButtons: {\n        marginTop: theme.spacing(4),\n      },\n}));\n\nconst LandingPage = () => {\n\n    const classes = useStyles()\n\n    return (\n        <Grid container direction='column'>\n            <Grid item container className={classes.heroContent} id='home'>\n                    <Grid item xs={1}/>\n                    <Grid item xs={4}>\n                        <Paper elevation={0} square className={classes.heroContent}>\n                            <Typography color='secondary' variant='h2'>Achieve financial Health by extracting value out of your supply chain.</Typography>\n                        </Paper>\n                </Grid>\n            </Grid>\n            <Grid item>\n                <Container maxWidth=\"sm\" id='about'>\n                    <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n                        About Us\n                    </Typography>\n                    <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n                        Something short and leading about the collection below—its contents, the creator, etc.\n                        Make it short and sweet, but not too short so folks don&apos;t simply skip over it\n                        entirely.\n                    </Typography>\n                    <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n                        Something short and leading about the collection below—its contents, the creator, etc.\n                        Make it short and sweet, but not too short so folks don&apos;t simply skip over it\n                        entirely.\n                    </Typography>\n                </Container>\n            </Grid>\n            <Grid item>\n                <Container maxWidth=\"sm\" id='services'>\n                    <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n                        Services\n                    </Typography>\n                    <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n                        Something short and leading about the collection below—its contents, the creator, etc.\n                        Make it short and sweet, but not too short so folks don&apos;t simply skip over it\n                        entirely.\n                    </Typography>\n                    <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n                        Something short and leading about the collection below—its contents, the creator, etc.\n                        Make it short and sweet, but not too short so folks don&apos;t simply skip over it\n                        entirely.\n                    </Typography>\n                </Container>\n            </Grid>\n            <Grid item>\n                <Container maxWidth=\"sm\" id='contact'>\n                    <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n                        Contact Us\n                    </Typography>\n                    <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n                        Something short and leading about the collection below—its contents, the creator, etc.\n                        Make it short and sweet, but not too short so folks don&apos;t simply skip over it\n                        entirely.\n                    </Typography>\n                    <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n                        Something short and leading about the collection below—its contents, the creator, etc.\n                        Make it short and sweet, but not too short so folks don&apos;t simply skip over it\n                        entirely.\n                    </Typography>\n                </Container>\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default LandingPage\n","import { useState } from 'react'\nimport { Link as RouterLink, useHistory } from 'react-router-dom'\nimport {\n  Drawer as MUIDrawer,\n  ListItem,\n  List,\n  Hidden,\n  ListItemText,\n  ListItemIcon\n} from \"@material-ui/core\"\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\"\nimport SyncAltOutlinedIcon from '@material-ui/icons/SyncAltOutlined'\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined'\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined'\nimport MoreHorizOutlinedIcon from '@material-ui/icons/MoreHorizOutlined'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  spacing: {\n    minHeight: '12px',\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    backgroundColor: '#1F1F29'\n  },\n  drawerText:{\n    color: '#fff',\n    paddingLeft: 35\n  },\n  hoverList: {\n    '&:hover': {\n      background: '#35353E',\n      borderLeft: \"5px solid #c3ddd2\"\n    },\n  },\n  selected: {\n    background: '#35353E',\n    borderLeft: \"5px solid #c3ddd2\"\n  },\n  accountText:{\n    color: '#fff',\n    '& span, & svg': {\n      fontSize: theme.typography.body1.fontSize,\n      fontWeight: theme.typography.fontWeightMedium\n    },\n    paddingLeft: 20\n  },\n  drawerTitle:{\n    color: '#c3ddd2',\n    '& span, & svg': {\n      fontSize: theme.typography.body2.fontSize\n    }\n  },\n  drawerIcon:{\n    color: '#c3ddd2',\n    minWidth: '35px'\n  },\n}))\n\nconst drawerWidth = 260\n\nconst Drawer = ({ window, mobileOpen, handleDrawerToggle, paths }) => {\n\n  let history = useHistory();\n\n  const classes = useStyles()\n  const theme = useTheme()\n  \n  const container = window !== undefined ? () => window().document.body : undefined\n\n  const [accountSelected, setAccountSelected] = useState(true)\n  const [createContractSelected, setCreateContractSelected] = useState(false)\n  const [reviewSelected, setReviewSelectedSelected] = useState(false)\n  const [uploadSelected, setUploadSelectedSelected] = useState(false)\n  const [requestPaymentSelected, setRequestPaymentSelected] = useState(false)\n  const [recurrentTransactionSelected, setRecurrentTransactionSelected] = useState(false)\n  const [transactionOverviewSelected, setTransactionOverviewSelected] = useState(false)\n  const [recipientsSelected, setRecipientsSelected] = useState(false)\n  const [contractsOverviewSelected, setContractsOverviewSelected] = useState(false)\n  const [moreSelected, setMoreSelected] = useState(false)\n\n  const itemsList = [\n    {\n      text: 'MY ACCOUNT',\n      className: classes.accountText,\n      icon: null,\n      spacing: null,\n      button: true,\n      state: accountSelected,\n      onClick: () =>  {\n        history.push(paths[0].appMain)\n        setAccountSelected(true)\n        setCreateContractSelected(false)\n        setReviewSelectedSelected(false)\n        setUploadSelectedSelected(false)\n        setRequestPaymentSelected(false)\n        setRecurrentTransactionSelected(false)\n        setTransactionOverviewSelected(false)\n        setRecipientsSelected(false)\n        setContractsOverviewSelected(false)\n        setMoreSelected(false)\n      }\n    },\n    {\n      text: 'CONTRACTS',\n      className: classes.drawerTitle,\n      icon: <ListItemIcon className={classes.drawerIcon}><DescriptionOutlinedIcon /></ListItemIcon>,\n      spacing: <div className={classes.spacing} />,\n      button: false,\n    },\n    {\n      text: 'Create a Contract',\n      className: classes.drawerText,\n      icon: null,\n      spacing: null,\n      button: true,\n      state: createContractSelected,\n      onClick: () => {\n        history.push(paths[0].appCreateContract)\n        setAccountSelected(false)\n        setCreateContractSelected(true)\n        setReviewSelectedSelected(false)\n        setUploadSelectedSelected(false)\n        setRequestPaymentSelected(false)\n        setRecurrentTransactionSelected(false)\n        setTransactionOverviewSelected(false)\n        setRecipientsSelected(false)\n        setContractsOverviewSelected(false)\n        setMoreSelected(false)\n      }\n    },\n    {\n      text: 'Review a Contract',\n      className: classes.drawerText,\n      icon: null,\n      spacing: null,\n      button: true,\n      state: reviewSelected,\n      onClick: () => {\n        history.push(paths[0].appReviewContract)\n        setAccountSelected(false)\n        setCreateContractSelected(false)\n        setReviewSelectedSelected(true)\n        setUploadSelectedSelected(false)\n        setRequestPaymentSelected(false)\n        setRecurrentTransactionSelected(false)\n        setTransactionOverviewSelected(false)\n        setRecipientsSelected(false)\n        setContractsOverviewSelected(false)\n        setMoreSelected(false)\n      }\n    },\n    {\n      text: 'TRANSACTIONS',\n      className: classes.drawerTitle,\n      icon: <ListItemIcon className={classes.drawerIcon}><SyncAltOutlinedIcon /></ListItemIcon>,\n      spacing: <div className={classes.spacing} />,\n      button: false,\n    },\n    /*\n    {\n      text: 'Upload an Invoice',\n      className: classes.drawerText,\n      icon: null,\n      spacing: null,\n      button: true,\n      state: uploadSelected,\n      onClick: () => {\n        history.push(paths[0].appUpload)\n        setAccountSelected(false)\n        setCreateContractSelected(false)\n        setReviewSelectedSelected(false)\n        setUploadSelectedSelected(true)\n        setRequestPaymentSelected(false)\n        setRecurrentTransactionSelected(false)\n        setTransactionOverviewSelected(false)\n        setRecipientsSelected(false)\n        setContractsOverviewSelected(false)\n        setMoreSelected(false)\n      }\n    },\n    */\n    {\n      text: 'Request a Payment',\n      className: classes.drawerText,\n      icon: null,\n      spacing: null,\n      button: true,\n      state: requestPaymentSelected,\n      onClick: () => {\n        history.push(paths[0].appRequest)\n        setAccountSelected(false)\n        setCreateContractSelected(false)\n        setReviewSelectedSelected(false)\n        setUploadSelectedSelected(false)\n        setRequestPaymentSelected(true)\n        setRecurrentTransactionSelected(false)\n        setTransactionOverviewSelected(false)\n        setRecipientsSelected(false)\n        setContractsOverviewSelected(false)\n        setMoreSelected(false)\n      }\n    },\n    {\n      text: 'Recurring Transaction',\n      className: classes.drawerText,\n      icon: null,\n      spacing: null,\n      button: true,\n      state: recurrentTransactionSelected,\n      onClick: () => {\n        history.push(paths[0].appRecurring)\n        setAccountSelected(false)\n        setCreateContractSelected(false)\n        setReviewSelectedSelected(false)\n        setUploadSelectedSelected(false)\n        setRequestPaymentSelected(false)\n        setRecurrentTransactionSelected(true)\n        setTransactionOverviewSelected(false)\n        setRecipientsSelected(false)\n        setContractsOverviewSelected(false)\n        setMoreSelected(false)\n      }\n    },\n    {\n      text: 'MY INFO',\n      className: classes.drawerTitle,\n      icon: <ListItemIcon className={classes.drawerIcon}><AccountCircleOutlinedIcon /></ListItemIcon>,\n      spacing: <div className={classes.spacing} />,\n      button: false,\n    },\n\n    {\n      text: 'Contracts Overview',\n      className: classes.drawerText,\n      icon: null,\n      spacing: null,\n      button: true,\n      state: contractsOverviewSelected,\n      onClick: () => {\n        history.push(paths[0].appContractsOverview)\n        setAccountSelected(false)\n        setCreateContractSelected(false)\n        setReviewSelectedSelected(false)\n        setUploadSelectedSelected(false)\n        setRequestPaymentSelected(false)\n        setRecurrentTransactionSelected(false)\n        setTransactionOverviewSelected(false)\n        setRecipientsSelected(false)\n        setContractsOverviewSelected(true)\n        setMoreSelected(false)\n      }\n    },\n    {\n      text: 'Transactions Overview',\n      className: classes.drawerText,\n      icon: null,\n      spacing: null,\n      button: true,\n      state: transactionOverviewSelected,\n      onClick: () => {\n        history.push(paths[0].appTransactions)\n        setAccountSelected(false)\n        setCreateContractSelected(false)\n        setReviewSelectedSelected(false)\n        setUploadSelectedSelected(false)\n        setRequestPaymentSelected(false)\n        setRecurrentTransactionSelected(false)\n        setTransactionOverviewSelected(true)\n        setRecipientsSelected(false)\n        setContractsOverviewSelected(false)\n        setMoreSelected(false)\n      }\n    },\n    {\n      text: 'Partners',\n      className: classes.drawerText,\n      icon: null,\n      spacing: null,\n      button: true,\n      state: recipientsSelected,\n      onClick: () => {\n        history.push(paths[0].appRecipients)\n        setAccountSelected(false)\n        setCreateContractSelected(false)\n        setReviewSelectedSelected(false)\n        setUploadSelectedSelected(false)\n        setRequestPaymentSelected(false)\n        setRecurrentTransactionSelected(false)\n        setTransactionOverviewSelected(false)\n        setRecipientsSelected(true)\n        setContractsOverviewSelected(false)\n        setMoreSelected(false)\n      }\n    },\n    {\n      text: 'MORE',\n      className: classes.drawerTitle,\n      icon: <ListItemIcon className={classes.drawerIcon}><MoreHorizOutlinedIcon /></ListItemIcon>,\n      spacing: <div className={classes.spacing} />,\n      button: false,\n    },\n    {\n      text: 'Payment Timings & Fees',\n      className: classes.drawerText,\n      icon: null,\n      spacing: null,\n      button: true,\n      state: moreSelected,\n      onClick: () => {\n        history.push(paths[0].appMore)\n        setAccountSelected(false)\n        setCreateContractSelected(false)\n        setReviewSelectedSelected(false)\n        setUploadSelectedSelected(false)\n        setRequestPaymentSelected(false)\n        setRecurrentTransactionSelected(false)\n        setTransactionOverviewSelected(false)\n        setRecipientsSelected(false)\n        setContractsOverviewSelected(false)\n        setMoreSelected(true)\n      }\n    },\n  ]\n\n  const ListItems = (\n    <div>\n      <div className={classes.toolbar} />\n      <div className={classes.spacing} />\n      <List>\n        {itemsList.map((item, index) => { \n          return(\n            <div key ={index}>\n            {item.spacing}\n            {item.button \n              ? <ListItem className={ item.state ? classes.selected : classes.hoverList } dense button={item.button} onClick={item.onClick}>\n                <ListItemText className={item.className} primary={item.text}/> \n                </ListItem>\n              : <ListItem dense> {item.icon}\n                <ListItemText className={item.className} primary={item.text}/> \n                </ListItem>\n            }          \n            </div>\n          )})}\n        </List>\n      </div>\n  )\n  \n  return (\n    <nav className={classes.drawer} >\n      <Hidden smUp implementation=\"css\">\n        <MUIDrawer \n              container={container}\n              variant=\"temporary\"\n              anchor={theme.direction === \"rtl\" ? \"right\" : \"left\"}\n              open={mobileOpen}\n              onClose={handleDrawerToggle}\n              classes={{\n                paper: classes.drawerPaper\n              }}\n              ModalProps={{\n                keepMounted: true\n              }}\n              >\n                {ListItems}\n        </MUIDrawer>\n      </Hidden>\n      <Hidden xsDown implementation=\"css\">\n        <MUIDrawer\n          classes={{\n            paper: classes.drawerPaper\n          }}\n          variant=\"permanent\"\n          open\n        >\n          {ListItems}\n        </MUIDrawer>\n      </Hidden>\n    </nav>\n  )\n}\n\nexport default Drawer;","import { Grid, Typography, Divider } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n    divider:{\n        marginBottom: '15px'\n    },\n}))\n\nconst Title = ({title}) => {\n    \n    const classes = useStyles()\n\n    return (\n        <Grid container>\n            <Grid item sm={false} md={1}/>\n            <Grid item sm={10}>\n                <Typography variant='h4' gutterBottom>{title}</Typography>\n                <Divider className={classes.divider}/>\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default Title\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 100,\n    width: '100%'\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginLeft: 10\n  },\n  description: {\n    marginTop: 20\n  },\n});\n\nexport default function SingleFieldCard({title, value, unit, description, action, onClick}) {\n  const classes = useStyles();\n  \n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n            {title}\n        </Typography>\n        <Typography display=\"inline\" variant=\"h5\" component=\"h2\">\n          {value} \n        </Typography>\n        <Typography display=\"inline\" className={classes.pos} color=\"textSecondary\">\n         {unit}\n        </Typography>\n        <Typography className={classes.description} variant=\"body2\" component=\"p\">\n        {description}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Button size=\"small\" onClick={onClick}>{action}</Button>\n      </CardActions>\n    </Card>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 100,\n    height: \"100%\",\n    width: '100%'\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginLeft: 10\n  },\n  description: {\n    marginTop: 25\n  }\n});\n\nexport default function TwoFieldCard ({potentialDebt, incurredDebt}) {\n  const classes = useStyles();\n  \n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <Typography component=\"h2\" variant=\"h6\" noWrap color=\"primary\" >\n            CURRENT DEBT\n        </Typography>\n        <Typography display=\"inline\" variant=\"h5\" component=\"h2\">\n          {incurredDebt} \n        </Typography>\n        <Typography display=\"inline\" className={classes.pos} color=\"textSecondary\">\n         Eth\n        </Typography>\n        <Typography component=\"h2\" variant=\"h6\" noWrap color=\"primary\" className={classes.description} >\n            NOT REVIEWED DEBT\n        </Typography>\n        <Typography display=\"inline\" variant=\"h5\" component=\"h2\">\n          {potentialDebt} \n        </Typography>\n        <Typography display=\"inline\" className={classes.pos} color=\"textSecondary\">\n         Eth\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n}\n","import React from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\n\nconst useRowStyles = makeStyles({\n  root: {\n    '& > *': {\n      borderBottom: 'unset',\n    },\n  },\n  reject: {\n    backgroundColor: '#ff6961',\n    marginTop: 5,\n    '&:hover': {\n      background: '#993F3A',\n    },\n  },\n  columntile: {\n    display: 'flex',\n    flexDirection: 'column'\n  }\n});\n\nconst StyledTableCell = withStyles((theme) => ({\n    head: {\n      backgroundColor: '#1F1F29',\n      color: theme.palette.common.white,\n    },\n    body: {\n      fontSize: 14,\n    },\n  }))(TableCell);\n  \n  const StyledTableRow = withStyles((theme) => ({\n    root: {\n      '&:nth-of-type(odd)': {\n        backgroundColor: theme.palette.action.hover,\n      },\n    },\n  }))(TableRow);\n\nfunction Row(props) {\n  const { row, allStatusValues, reviewTable, onAccept, onReject, account } = props;\n  const [open, setOpen] = React.useState(false);\n  const classes = useRowStyles();\n\n  return (\n    <React.Fragment>\n      <StyledTableRow className={classes.root}>\n          <StyledTableCell>\n          {\n            (allStatusValues[0].NotReviewed !== row.statusName && allStatusValues[0].Rejected !== row.statusName )\n            &&\n            <IconButton size=\"small\" onClick={() => setOpen(!open)}>\n              {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n            </IconButton>\n          }\n          </StyledTableCell>\n        <StyledTableCell align=\"right\">\n        {row.id.toString()}\n        </StyledTableCell>\n        <StyledTableCell align=\"left\">{row.name}</StyledTableCell>\n        <StyledTableCell align=\"left\">{row.totalEther} Eth</StyledTableCell>\n        <StyledTableCell align=\"left\">{row.paidEther} Eth</StyledTableCell>\n        <StyledTableCell align=\"left\">{ row.partnerName}</StyledTableCell>\n        <StyledTableCell align=\"left\">{row.startDateFormat}</StyledTableCell>\n        <StyledTableCell align=\"left\">{row.expiryDateFormat}</StyledTableCell>\n        <StyledTableCell align=\"center\">{row.speed} %</StyledTableCell>\n        <StyledTableCell align=\"left\">{row.statusName.toString()}</StyledTableCell>\n        <StyledTableCell align=\"center\">{row.daysToOpen}</StyledTableCell>\n        {(reviewTable && account === row.recipient)\n        ?\n          <StyledTableCell align=\"center\">\n            <div className={classes.columntile}>\n              <Button \n                variant=\"contained\" \n                color=\"primary\" \n                size='small'\n                id = {row.id.toString()}\n                onClick={() => { onAccept(row.id.toString())  } }\n                >\n                Accept\n              </Button>\n              <Button \n                className={classes.reject}\n                variant=\"contained\" \n                color=\"primary\" \n                id = {row.id.toString()}\n                size='small'\n                onClick={() => { onReject(row.id.toString()) } }\n                >\n                Reject\n              </Button>\n            </div>\n          </StyledTableCell>\n          : [\n            reviewTable\n            ? <StyledTableCell align=\"center\"><Typography variant='overline' noWrap>To Review by:</Typography> <Typography variant='subtitle2' noWrap>{row.recipientName}</Typography></StyledTableCell>\n            : null\n          ]\n        }\n        \n      </StyledTableRow>\n      {\n        (allStatusValues[0].NotReviewed !== row.statusName && allStatusValues[0].Rejected !== row.statusName )\n         &&\n      <StyledTableRow>\n        <StyledTableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={12}>\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            <Box margin={1}>\n              {\n                row.transactions.length > 0\n                ?\n                <div>\n                  <Typography variant=\"h6\" gutterBottom component=\"div\">\n                    Transactions\n                  </Typography>\n                  <Table size=\"small\" aria-label=\"purchases\">\n                    <TableHead>\n                      <TableRow>\n                        <TableCell>Date</TableCell>\n                        <TableCell>Successful</TableCell>\n                        <TableCell>Transaction Value</TableCell>\n                        <TableCell>Percentage of Full Value</TableCell>\n                      </TableRow>\n                    </TableHead>\n                  <TableBody>\n                      {row.transactions.map((transaction, key) => (\n                          <StyledTableRow key={key}>\n                          <StyledTableCell component=\"th\" scope=\"row\">\n                            {transaction.dateFormat}\n                          </StyledTableCell>\n                          <StyledTableCell align=\"left\">{transaction.successful ? <Typography variant='inherit' color='primary'>YES</Typography> : <Typography variant='inherit' color='error'>NO</Typography>}</StyledTableCell>\n                          <StyledTableCell align=\"left\">{transaction.valueEther} Eth</StyledTableCell>\n                          <StyledTableCell align=\"left\">\n                            {Math.round(transaction.valueEther / row.totalEther * 10000) / 100} %\n                          </StyledTableCell>\n                        </StyledTableRow>\n                      ))}\n                    </TableBody>\n                  </Table>\n                </div>\n                :\n                <Typography variant=\"h6\" gutterBottom component=\"div\">\n                  No Transactions for this Contract\n                </Typography>\n\n              }\n            </Box>\n          </Collapse>\n        </StyledTableCell>\n      </StyledTableRow>\n            }\n    </React.Fragment>\n  );\n}\n\nconst ContractsAndTransactionsTable =({ contracts, statusValues, allStatusValues, reviewTable, onAccept, onReject, account }) => {\n\n  return (\n    <TableContainer component={Paper}>\n      <Table>\n        <TableHead>\n          <StyledTableRow>\n            <StyledTableCell />\n            <StyledTableCell align=\"right\">ID</StyledTableCell>\n            <StyledTableCell align=\"left\">NAME</StyledTableCell>\n            <StyledTableCell align=\"left\">TOTAL VALUE</StyledTableCell>\n            <StyledTableCell align=\"left\">PAID VALUE</StyledTableCell>\n            <StyledTableCell align=\"left\">PARTNER</StyledTableCell>\n            <StyledTableCell align=\"left\">START</StyledTableCell>\n            <StyledTableCell align=\"left\">EXPIRATION</StyledTableCell>\n            <StyledTableCell align=\"center\">SPEED</StyledTableCell>\n            <StyledTableCell align=\"left\">STATUS</StyledTableCell>\n            <StyledTableCell align=\"left\">DAYS LOCKED</StyledTableCell>\n            {reviewTable && <StyledTableCell align=\"center\">ACTION</StyledTableCell>}\n\n          </StyledTableRow>\n        </TableHead>\n        <TableBody>\n          {contracts.map((contract) => {\n            if( statusValues.includes(contract.statusName)){\n              return <Row key={contract.id.toString()} row={contract} allStatusValues={allStatusValues} reviewTable={reviewTable} onReject={onReject} onAccept={onAccept} account={account}/>\n            }\n            })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nexport default ContractsAndTransactionsTable\n","import { Grid, Typography, Divider } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Link as RouterLink, useHistory } from 'react-router-dom'\n\nimport Title from '../smallComponents/Title'\nimport SingleFieldCard from '../smallComponents/SingleFieldCard'\nimport TwoFieldCard from '../smallComponents/TwoFieldCard'\nimport ContractsAndTransactionsTable from '../smallComponents/ContractsAndTransactionsTable'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    mainGrid: {\n        flexGrow: 1,\n        marginTop: '50px'\n    },\n    subtitle:{\n        marginTop: '5px',\n        fontSize: '1.9rem'\n    }\n  }))\n\nconst MyAccount = ({ contracts, balance, isBlocked, incurredDebt, potentialDebt, statusValues, paths}) => {\n\n    const classes = useStyles()\n    let history = useHistory();\n\n    let activeContracts = 0\n\n    for(let i=0; i<contracts.length; i++){\n        if(contracts[i].statusName === statusValues[0].Accepted){\n            activeContracts ++\n        }\n    }\n\n    const cards = [\n        {\n            title: 'BALANCE',\n            value: balance,\n            unit: 'Eth',\n            description: 'ColPay Tokens used in transactions in the Platform',\n            action: 'TOP UP',\n            onClick: () => history.push(paths[0].appMore)\n        },\n        {\n            title: 'CONTRACTS',\n            value: activeContracts,\n            unit: 'Active Contracts',\n            description: 'Currently active contracts you have with other ColPay users',\n            action: 'CREATE A CONTRACT',\n            onClick: () => history.push(paths[0].appCreateContract)\n        },\n    ]\n\n    return (\n        <div className={classes.root}>\n            <Grid container direction='column' className={classes.mainGrid} spacing={2}>\n                <Title title={'My Account'}/>\n                <Grid item sm={12} md={12} container>\n                    <Grid item sm={false} md={1}/>\n                    <Grid item sm={12} md={10} container spacing={3}>\n                        {cards.map((card, index)=>{\n                            return(<Grid key={index} item sm={6} md={8/cards.length}><SingleFieldCard {...card}/></Grid>)\n                        })}\n                        <Grid item sm={6} md={4}>\n                            <TwoFieldCard incurredDebt={incurredDebt} potentialDebt={potentialDebt} isBlocked={isBlocked}/>\n                        </Grid>\n                    </Grid>\n                    <Grid item sm={false} md={1}/>\n                </Grid>\n                <Grid item sm={false} md={1}/>\n                <Grid item sm={12} md={12} container>\n                    <Grid item sm={false} md={1}/>\n                    <Grid>\n                        <Typography variant='h4'gutterBottom className={classes.subtitle}>\n                            Active Contracts\n                        </Typography>\n                    </Grid>\n                </Grid>\n                    <Grid item sm={12} md={12} container>\n                        <Grid item sm={false} md={1}/>\n                        {\n                            contracts.length > 0\n                            ? <Grid item sm={10} md={10}><ContractsAndTransactionsTable contracts={contracts} statusValues={[statusValues[0].Accepted ]} allStatusValues={statusValues} reviewTable={false}/></Grid>\n                            : <Typography variant='h6'>No Active Contracts to Show</Typography>\n                        }\n                        <Grid item sm={false} md={1}/>\n                    </Grid>\n                </Grid>\n        </div>\n    )\n}\n\nexport default MyAccount\n","import { Grid, Typography, FormGroup, FormControlLabel, Checkbox } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { useState } from 'react'\n\nimport Title from '../smallComponents/Title'\nimport ContractsAndTransactionsTable from '../smallComponents/ContractsAndTransactionsTable'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    mainGrid: {\n        flexGrow: 1,\n        marginTop: '50px'\n    },\n    subtitle:{\n        marginTop: '5px',\n        fontSize: '1.9rem'\n    }\n  }))\n\nconst ContractsOverview = ({contracts, statusValues}) => {\n\n    const classes = useStyles()\n\n    const [selectedStatus, setSelectedStatus] = useState([statusValues[0].NotReviewed, statusValues[0].Rejected, statusValues[0].Accepted, statusValues[0].Fulfilled, statusValues[0].MissingPayments])\n\n    const [state, setState] = useState({\n        Accepted: true,\n        Rejected: true,\n        MissingPayments: true,\n        Fulfilled: true,\n        NotReviewed: true,\n      });\n    \n      const handleChange = (event) => {\n        setState({ ...state, [event.target.name]: event.target.checked })\n\n        let statuses = selectedStatus\n\n        let name = event.target.name\n        if (name === 'NotReviewed') name = statusValues[0].NotReviewed\n        if (name === 'MissingPayments') name = statusValues[0].MissingPayments\n\n        if (event.target.checked){\n            statuses.push(name)\n        }else{\n            statuses.splice(statuses.indexOf(name), 1)\n        }\n\n        setSelectedStatus(statuses)\n\n        console.log(selectedStatus)\n\n      };\n\n    return (\n        <div className={classes.root}>\n            <Grid container direction='column' className={classes.mainGrid} spacing={2}>\n                <Title title={'Contracts Overview'}/>\n                <Grid item sm={12} md={12} container>\n                    <Grid item sm={false} md={1}/>\n                    <Grid item sm={10}>\n                        <Typography variant='body1' gutterBottom>You can filter Contracts by Status:</Typography>\n                    <FormGroup row>\n                    <FormControlLabel\n                            control={\n                            <Checkbox\n                                checked={state.NotReviewed}\n                                onChange={handleChange}\n                                name=\"NotReviewed\"\n                                color=\"primary\"\n                            />\n                            }\n                            label='Not Reviewed'\n                        />\n                        <FormControlLabel\n                            control={\n                            <Checkbox\n                                checked={state.Accepted}\n                                onChange={handleChange}\n                                name=\"Accepted\"\n                                color=\"primary\"\n                            />\n                            }\n                            label='Accepted'\n                        />\n                        <FormControlLabel\n                            control={\n                            <Checkbox\n                                checked={state.Rejected}\n                                onChange={handleChange}\n                                name=\"Rejected\"\n                                color=\"primary\"\n                            />\n                            }\n                            label='Rejected'\n                        />\n                        <FormControlLabel\n                            control={\n                            <Checkbox\n                                checked={state.MissingPayments}\n                                onChange={handleChange}\n                                name=\"MissingPayments\"\n                                color=\"primary\"\n                            />\n                            }\n                            label='Missing a Payment'\n                        />\n                        <FormControlLabel\n                            control={\n                            <Checkbox\n                                checked={state.Fulfilled}\n                                onChange={handleChange}\n                                name=\"Fulfilled\"\n                                color=\"primary\"\n                            />\n                            }\n                            label='Fulfilled'\n                        />\n                        </FormGroup>\n                    </Grid>\n                </Grid>\n                    <Grid item sm={12} md={12} container>\n                        <Grid item sm={false} md={1}/>\n                        {\n                            contracts.length > 0\n                            ? <Grid item sm={10} md={10}><ContractsAndTransactionsTable contracts={contracts} statusValues={selectedStatus} reviewTable={false} allStatusValues={statusValues}/></Grid>\n                            : <Typography variant='h6'>No Contracts to Show</Typography>\n                        }\n                        <Grid item sm={false} md={1}/>\n                    </Grid>\n                </Grid>\n        </div>\n    )\n}\n\nexport default ContractsOverview\n","import { Grid, Typography, Divider } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport Title from '../smallComponents/Title'\nimport ContractsAndTransactionsTable from '../smallComponents/ContractsAndTransactionsTable'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    mainGrid: {\n        flexGrow: 1,\n        marginTop: '50px'\n    },\n    subtitle:{\n        marginTop: '5px',\n        fontSize: '1.9rem'\n    }\n  }))\n\nconst ContractsReview = ({contracts, statusValues, account, onAccept, onReject}) => {\n\n    const classes = useStyles()\n\n\n    return (\n        <div className={classes.root}>\n            <Grid container direction='column' className={classes.mainGrid} spacing={2}>\n                <Title title={'Contracts Not yet Reviewed'}/>\n                    <Grid item sm={12} md={12} container>\n                        <Grid item sm={false} md={1}/>\n                        {\n                            contracts.length > 0\n                            ? <Grid item sm={10} md={10}><ContractsAndTransactionsTable onReject={onReject} onAccept={onAccept} account={account} contracts={contracts} statusValues={[statusValues[0].NotReviewed]} allStatusValues={statusValues} reviewTable={true}/></Grid>\n                            : <Typography variant='h6'>No Contracts to Show</Typography>\n                        }\n                        <Grid item sm={false} md={1}/>\n                    </Grid>\n                </Grid>\n        </div>\n    )\n}\n\nexport default ContractsReview\n","import React from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 700,\n  },\n});\n\nexport default function TransactionsTable({contracts, account}) {\n  const classes = useStyles();\n\n  let transactions = []\n\n  for(let i=0; i < contracts.length; i++){\n      const contractTransactions = contracts[i].transactions\n\n      for(let j=0; j<contractTransactions.length; j++){\n        contractTransactions[j].partnerName = contracts[i].partnerName\n        contractTransactions[j].seller = contracts[i].seller\n        contractTransactions[j].contractName = contracts[i].name\n\n        transactions.push(contractTransactions[j])\n      }\n  }\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"customized table\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell>Date</StyledTableCell>\n            <StyledTableCell>Contract</StyledTableCell>\n            <StyledTableCell align=\"left\">Partner</StyledTableCell>\n            <StyledTableCell align=\"left\">Successful</StyledTableCell>\n            <StyledTableCell align=\"left\">Transaction Value</StyledTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {transactions.map((transaction, key) => (\n                <StyledTableRow key={key}>\n                <StyledTableCell component=\"th\" scope=\"row\">\n                        {transaction.dateFormat}\n                        </StyledTableCell>\n                <StyledTableCell component=\"th\" scope=\"row\">{transaction.contractName}</StyledTableCell>\n                <StyledTableCell component=\"th\" scope=\"row\">{transaction.partnerName}</StyledTableCell>\n                <StyledTableCell align=\"left\">{transaction.successful ? <Typography variant='inherit' color='primary'>YES</Typography> : <Typography variant='inherit' color='error'>NO</Typography>}</StyledTableCell>\n                <StyledTableCell align=\"left\">{transaction.seller === account ? <Typography variant='inherit'>+ {transaction.valueEther} Eth</Typography> : <Typography variant='inherit' >- {transaction.valueEther} Eth</Typography>}</StyledTableCell>\n                </StyledTableRow>\n              )\n          )}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import { Grid, Typography, Divider } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport Title from '../smallComponents/Title'\nimport TransactionsTable from '../smallComponents/TransactionsTable'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    mainGrid: {\n        flexGrow: 1,\n        marginTop: '50px'\n    },\n    subtitle:{\n        marginTop: '5px',\n        fontSize: '1.9rem'\n    }\n  }))\n\nconst TransactionsOverview = ({contracts, account}) => {\n\n    const classes = useStyles()\n\n\n    return (\n        <div className={classes.root}>\n            <Grid container direction='column' className={classes.mainGrid} spacing={2}>\n                <Title title={'Transactions Overview'}/>\n                    <Grid item sm={12} md={12} container>\n                        <Grid item sm={false} md={1}/>\n                        {\n                            contracts.length > 0\n                            ? <Grid item sm={10} md={10}><TransactionsTable contracts={contracts} account={account}/></Grid>\n                            : <Typography variant='h6'>No Transactions to Show</Typography>\n                        }\n                        <Grid item sm={false} md={1}/>\n                    </Grid>\n                </Grid>\n        </div>\n    )\n}\n\nexport default TransactionsOverview","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 100,\n    width: '100%'\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginLeft: 10\n  },\n  description: {\n    marginTop: 15\n  },\n});\n\nexport default function RecipientCard({ recipient}) {\n  const classes = useStyles();\n\n  const {id, name, contracts,  value } = recipient\n  \n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n            {name}\n        </Typography>\n        <Typography display=\"inline\" variant=\"h5\" component=\"h2\">\n          {contracts} \n        </Typography>\n        <Typography display=\"inline\" className={classes.pos} color=\"textSecondary\">\n         Total Contracts\n        </Typography>\n        <br/>\n        <br/>\n        <Typography display=\"inline\" variant=\"h5\" component=\"h2\">\n          {value} \n        </Typography>\n        <Typography display=\"inline\" className={classes.pos} color=\"textSecondary\">\n         Eth Total Value\n        </Typography>\n        <Typography className={classes.description} variant=\"body2\" color=\"textSecondary\">\n        ColPay ID:\n        </Typography>\n        <Typography  variant=\"body2\" component=\"p\" color=\"textSecondary\">\n        {id}\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n}","import { Grid, FormGroup, FormControl, Checkbox, FormControlLabel, Typography } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { useState } from 'react'\n\nimport Title from '../smallComponents/Title'\nimport RecipientCard from '../smallComponents/RecipientCard'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    mainGrid: {\n        flexGrow: 1,\n        marginTop: '50px'\n    },\n    subtitle:{\n        marginTop: '5px',\n        fontSize: '1.9rem'\n    }\n  }))\n\nconst RecipientsOverview = ({contracts, statusValues}) => {\n\n    const classes = useStyles()\n\n    const [state, setState] = useState({\n        Accepted: true,\n        Rejected: true,\n        MissingPayments: true,\n        Fulfilled: true,\n        NotReviewed: true,\n      });\n    \n      const handleChange = (event) => {\n        setState({ ...state, [event.target.name]: event.target.checked });\n      };\n\n    let recipients = []\n    let recipientNumber = 0\n\n    for (let i=0; i < contracts.length; i++){\n\n        let status = statusValues[contracts[i].status]\n\n        if(state[status]){\n\n            let recipientIncludedId = -1\n\n            for (let j=0; j < recipientNumber; j++){\n                if (recipients[j].id === contracts[i].partner){\n                    recipientIncludedId = j\n                }\n            }\n\n            if(recipientIncludedId == -1){\n                let recipient = {\n                    name: contracts[i].partnerName,\n                    id: contracts[i].partner,\n                    contracts: 1,\n                    value: contracts[i].totalEther\n                }\n                recipients[recipientNumber] = recipient\n                recipientNumber++\n            }\n            else {\n                recipients[recipientIncludedId].contracts ++\n                recipients[recipientIncludedId].value += contracts[i].totalEther\n            }\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <Grid container direction='column' className={classes.mainGrid} spacing={2}>\n                <Title title={'Partners'}/>\n                <Grid item sm={12} md={12} container>\n                    <Grid item sm={false} md={1}/>\n                    <Grid item sm={10}>\n                        <Typography variant='body1' gutterBottom>You can filter your Partners by the Status of the Contracs you have with them:</Typography>\n                    <FormGroup row>\n                    <FormControlLabel\n                            control={\n                            <Checkbox\n                                checked={state.NotReviewed}\n                                onChange={handleChange}\n                                name=\"NotReviewed\"\n                                color=\"primary\"\n                            />\n                            }\n                            label='Not Reviewed'\n                        />\n                        <FormControlLabel\n                            control={\n                            <Checkbox\n                                checked={state.Accepted}\n                                onChange={handleChange}\n                                name=\"Accepted\"\n                                color=\"primary\"\n                            />\n                            }\n                            label='Accepted'\n                        />\n                        <FormControlLabel\n                            control={\n                            <Checkbox\n                                checked={state.Rejected}\n                                onChange={handleChange}\n                                name=\"Rejected\"\n                                color=\"primary\"\n                            />\n                            }\n                            label='Rejected'\n                        />\n                        <FormControlLabel\n                            control={\n                            <Checkbox\n                                checked={state.MissingPayments}\n                                onChange={handleChange}\n                                name=\"MissingPayments\"\n                                color=\"primary\"\n                            />\n                            }\n                            label='Missing a Payment'\n                        />\n                        <FormControlLabel\n                            control={\n                            <Checkbox\n                                checked={state.Fulfilled}\n                                onChange={handleChange}\n                                name=\"Fulfilled\"\n                                color=\"primary\"\n                            />\n                            }\n                            label='Fulfilled'\n                        />\n                        </FormGroup>\n                    </Grid>\n                </Grid>\n                <Grid item sm={12} md={12} container>\n                    <Grid item sm={false} md={1}/>\n                    <Grid item sm={12} md={10} container spacing={3}>\n                            {\n                            recipients.map((recipient, key) => (\n                                <Grid item sm={12} lg={6}><RecipientCard recipient={recipient}/></Grid>\n                            ))\n                            }\n                    </Grid>\n                    <Grid item sm={false} md={1}/>\n                </Grid>\n\n            </Grid>\n        </div>\n    )\n}\n\nexport default RecipientsOverview","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport { Typography, Grid} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    flexGrow: 1,\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n  title:{\n    marginTop: 20\n}\n}));\n\nconst ContractDurationForm = ({handleChange, contractArguments}) => {\n\n    const classes = useStyles()\n\n    return (\n        <React.Fragment>\n            <Typography className={classes.title} variant=\"h6\" gutterBottom>Contract Duration Informaion</Typography>\n            <Grid className={classes.container} container spacing={3}>\n                <Grid item xs={12} md={6}>\n                <TextField\n                    id=\"datetime-local\"\n                    label=\"Contract Start Time\"\n                    type=\"datetime-local\"\n                    defaultValue={contractArguments.startDate}\n                    className={classes.textField}\n                    onChange={handleChange('startDate')}\n                    InputLabelProps={{\n                    shrink: true,\n                    required: true,\n                    }}\n                />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                <TextField\n                    id=\"datetime-local\"\n                    label=\"Contract Expiry Time\"\n                    type=\"datetime-local\"\n                    defaultValue={contractArguments.expiryDate}\n                    onChange={handleChange('expiryDate')}\n                    className={classes.textField}\n                    InputLabelProps={{\n                    shrink: true,\n                    required: true,\n                    }}\n                />\n                </Grid>\n               \n            </Grid>\n        </React.Fragment>\n    )\n}\n\nexport default ContractDurationForm","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport { Typography, Grid, FormControlLabel, FormControl, Checkbox, MenuItem, FormHelperText, Select, InputLabel } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n      minWidth: 120,\n    },\n    title:{\n        marginTop: 20\n    }\n  }));\n\nconst ContractRecipientForm = ({handleChange, AccountsToName, contractArguments, account}) => {\n\n    const classes = useStyles()\n\n    return (\n        <React.Fragment>\n            <Typography className={classes.title} variant=\"h6\" gutterBottom>Basic Contract Informaion</Typography>\n            <Grid container spacing={3}>\n                <Grid item xs={12} md={6}>\n                <TextField \n                    required id=\"ConractName\" \n                    label=\"Conract Name\"\n                    placeholder='Enter the contract name' \n                    onChange={handleChange('name')}\n                    defaultValue={contractArguments.name}\n                    fullWidth \n                    autoComplete=\"cc-name\" />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                <FormControl className={classes.formControl}>\n                    <InputLabel >Recipient</InputLabel>\n                    <Select\n                    required id=\"Contract Recipient\"\n                    defaultValue={contractArguments.recipient}\n                    onChange={handleChange('recipient')}\n                    >\n                    {\n                        Object.entries(AccountsToName[0]).map(([address, name], key) => {\n                            if (account !== address ){\n                                return (<MenuItem key={key} value={address}>{name}</MenuItem>)\n                            }\n                        })\n                    }\n                    </Select>\n                    <FormHelperText>Please select from the list of ColPay Members</FormHelperText>\n                </FormControl>\n                </Grid>\n                <Grid item xs={12} md={6}>\n                <TextField\n                    required id=\"ContractValue\" \n                    label=\"Conract Value (Eth)\"\n                    placeholder='Enter the contract value in Ether' \n                    onChange={handleChange('totalAmount')}\n                    defaultValue={contractArguments.totalAmount}\n                    fullWidth \n                    autoComplete=\"cc-number\"\n                />\n                </Grid>\n                <Grid item xs={12}>\n                <FormControlLabel\n                    control={<Checkbox color=\"primary\" name=\"saveCard\" value=\"yes\" />}\n                    label=\"Please select if you are the seller in this contract *\"\n                    onChange={handleChange('createdBySeller')}\n                />\n                </Grid>\n            </Grid>\n        </React.Fragment>\n    )\n}\n\nexport default ContractRecipientForm\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles((theme) => ({\n  listItem: {\n    padding: theme.spacing(1, 0),\n  },\n  total: {\n    fontWeight: 700,\n  },\n  title: {\n    marginTop: theme.spacing(2),\n  },\n  sectionTitle: {\n    marginTop: 20,\n  },\n}));\n\nexport default function ContractReviewForm({contractArguments, AccountsToName}) {\n  const classes = useStyles();\n\n  const recipientName = AccountsToName[0][contractArguments.recipient]\n\n  return (\n    <React.Fragment>\n      <Typography classsName={classes.sectionTitle} variant=\"h6\" gutterBottom>\n        Contract Summary\n      </Typography>\n      <Grid container spacing={3}>\n        <Grid item xs={6} sm={4}>\n          <Typography variant=\"button\" gutterBottom className={classes.title}>\n            Contract Name\n          </Typography>\n          <Typography variant='body1' gutterBottom>{contractArguments.name}</Typography>\n        </Grid>\n        <Grid item xs={6} sm={4}>\n          <Typography variant=\"button\" gutterBottom className={classes.title}>\n            Recipient\n          </Typography>\n          <Typography variant='body1' gutterBottom>{recipientName}</Typography>\n        </Grid><Grid item xs={6} sm={4}>\n          <Typography variant=\"button\" gutterBottom className={classes.title}>\n            Contract Value\n          </Typography>\n          <Typography variant='body1' gutterBottom>{contractArguments.totalAmount} Eth</Typography>\n        </Grid><Grid item xs={6} sm={4}>\n          <Typography variant=\"button\" gutterBottom className={classes.title}>\n            Start Date\n          </Typography>\n          <Typography variant='body1' gutterBottom>{contractArguments.startDate}</Typography>\n        </Grid>\n        <Grid item xs={6} sm={8}>\n          <Typography variant=\"button\" gutterBottom className={classes.title}>\n            Expiry Date\n          </Typography>\n          <Typography variant='body1' gutterBottom>{contractArguments.expiryDate}</Typography>\n        </Grid>\n        <Grid item xs={6} sm={4}>\n          <Typography variant=\"button\" gutterBottom className={classes.title}>\n            Days To Open\n          </Typography>\n          <Typography variant='body1' gutterBottom>{contractArguments.daysToOpen}</Typography>\n        </Grid>\n        <Grid item xs={6} sm={8}>\n          <Typography variant=\"button\" gutterBottom className={classes.title}>\n            Speed\n          </Typography>\n          <Typography variant='body1' gutterBottom>{contractArguments.speed} %</Typography>\n        </Grid>\n        <Grid item xs={12} sm={12}>\n        <Typography variant=\"button\" gutterBottom className={classes.title}>\n            Statement\n          </Typography>\n          {\n            contractArguments.createdBySeller\n            ?  <Typography variant='body1' gutterBottom>The creator of the contract is owed {contractArguments.totalAmount} Eth by {recipientName}.</Typography>\n            :  <Typography variant='body1' gutterBottom>The creator of the contract owes {contractArguments.totalAmount} Eth to {recipientName}.</Typography>}\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport { Typography, Grid} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    flexGrow: 1,\n    marginTop: 20\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n  rightText: {\n    textAlign: \"right\",\n    fontWeight: theme.typography.fontWeightBold\n  },\n  title:{\n    marginTop: 20\n}\n}));\n\nconst ContractSpeedForm = ({handleChange, contractArguments}) => {\n\n    const classes = useStyles()\n\n    return (\n        <React.Fragment>\n            <Typography className={classes.title} variant=\"h6\" gutterBottom>Payment Process Details</Typography>\n            <Grid className={classes.container} container spacing={2}>\n                <Grid item xs={2} md={2}><Typography  color='primary' className={classes.rightText} variant=\"body2\" >DAYS TO OPEN</Typography></Grid>\n                <Grid item xs={8} md={10}><Typography   variant=\"body2\" >Indicates how many days will pass before the seller is allowed to request a payment</Typography></Grid>\n                <Grid item xs={2} md={2}><Typography  color='primary' className={classes.rightText} variant=\"body2\" >SPEED</Typography></Grid>\n                <Grid item xs={8} md={8}><Typography   variant=\"body2\" >Indicates what percentage of the contract value the seller will be allowed to request every day (i.e.: if it is set at 90%, when half of the contract time has passed, the seller will be able to request 45% of the full contract value)</Typography></Grid>\n            </Grid>\n            <Grid className={classes.container} container spacing={3}>\n                \n                <Grid item xs={12} md={6}>\n                <TextField\n                    required id=\"ContractDaysToOpen\" \n                    label=\"Days to Open the Contract\"\n                    placeholder='Enter number of Days to Open the Contract' \n                    onChange={handleChange('daysToOpen')}\n                    defaultValue={contractArguments.daysToOpen}\n                    fullWidth \n                    autoComplete=\"cc-number\"\n                />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                <TextField\n                    required id=\"ContractSpeed\" \n                    label=\"Conract Speed (%)\"\n                    placeholder='Enter the contract speed' \n                    onChange={handleChange('speed')}\n                    defaultValue={contractArguments.speed}\n                    fullWidth \n                    autoComplete=\"cc-number\"\n                />\n                </Grid>\n               \n            </Grid>\n        </React.Fragment>\n    )\n}\n\nexport default ContractSpeedForm","import { useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport StepContent from '@material-ui/core/StepContent';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nimport ContractDurationForm from '../smallComponents/ContractDurationForm'\nimport ContractRecipientForm from '../smallComponents/ContractRecipientForm'\nimport ContractReviewForm from '../smallComponents/ContractReviewForm'\nimport ContractSpeedForm from '../smallComponents/ContractSpeedForm'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  button: {\n    marginTop: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n  actionsContainer: {\n    marginBottom: theme.spacing(2),\n    marginTop: theme.spacing(2)\n  },\n  resetContainer: {\n    padding: theme.spacing(3),\n  },\n}));\n\nfunction getSteps() {\n  return ['Contract Recipient and Value', 'Define Contract Duration', 'Configure Payment Fragmentation', 'Review the Contract'];\n}\n\nexport default function StepperContract({onCreateContract, AccountsToName, account}) {\n  const classes = useStyles();\n\n  const [contractArguments, setContractArgumentsrguments] = useState(\n    {\n      name: '',\n      totalAmount: '',\n      recipient: '',\n      startDate: '',\n      expiryDate: '',\n      daysToOpen: '',\n      speed: '',\n      createdBySeller: false\n    }\n  )\n\n  const [activeStep, setActiveStep] = useState(0);\n  const steps = getSteps();\n\n  const handleNext = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  };\n\n  const handleChange = (input) => e => {\n    const values = contractArguments\n    \n    if (input === 'createdBySeller'){\n      values[input] = e.target.checked\n    }\n    else {\n      values[input] = e.target.value\n    }\n    //setContractArgumentsrguments(values)\n\n    console.log(values)\n  }\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n\n        if(!contractArguments.name || contractArguments.totalAmount ===0 || contractArguments.recipient ==='0x0' || contractArguments.startDate ===0 || contractArguments.expiryDate ===0 || contractArguments.daysToOpen ===0 || contractArguments.speed ===0){\n            alert('Please complete all fields in the form correctly to submit a new contract.')\n            return\n        }\n\n        const totalPrice = window.web3.utils.toWei(contractArguments.totalAmount.toString(), 'Ether')\n\n        const start = Math.floor(Date.parse(contractArguments.startDate) / 1000).toString()\n        const expire = Math.floor(Date.parse(contractArguments.expiryDate) / 1000).toString()\n\n        onCreateContract(contractArguments.name, totalPrice, contractArguments.recipient, start, expire, contractArguments.daysToOpen, contractArguments.speed, contractArguments.createdBySeller)\n\n        setContractArgumentsrguments(\n          {\n          name: '',\n          totalAmount: 0,\n          recipient: '0x0',\n          startDate: '',\n          expiryDate: '',\n          daysToOpen: 0,\n          speed: 0,\n          createdBySeller: false\n        })\n  };\n\n  function getStepContent(step) {\n    switch (step) {\n      case 0:\n        return <ContractRecipientForm handleChange={handleChange} AccountsToName={AccountsToName} contractArguments={contractArguments} account={account}/>;\n      case 1:\n        return <ContractDurationForm handleChange={handleChange} contractArguments={contractArguments}/>;\n      case 2:\n        return <ContractSpeedForm handleChange={handleChange} contractArguments={contractArguments}/>;\n      case 3:\n        return <ContractReviewForm contractArguments={contractArguments} AccountsToName={AccountsToName}/>;\n      default:\n        return 'Unknown step';\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <Stepper activeStep={activeStep} orientation=\"vertical\">\n        {steps.map((label, index) => (\n          <Step key={label}>\n            <StepLabel>{label}</StepLabel>\n            <StepContent>\n              <Typography>{getStepContent(index)}</Typography>\n              <div className={classes.actionsContainer}>\n                <div>\n                  <Button\n                    disabled={activeStep === 0}\n                    onClick={handleBack}\n                    className={classes.button}\n                  >\n                    Back\n                  </Button>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={ activeStep === steps.length - 1 ? handleSubmit : handleNext }\n                    className={classes.button}\n                  >\n                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                  </Button>\n                </div>\n              </div>\n            </StepContent>\n          </Step>\n        ))}\n      </Stepper>\n      {activeStep === steps.length && (\n        <Paper square elevation={0} className={classes.resetContainer}>\n          <Typography>All steps completed - you&apos;re finished</Typography>\n          <Button onClick={handleReset} className={classes.button}>\n            Reset\n          </Button>\n        </Paper>\n      )}\n    </div>\n  );\n}\n","import { Grid, Typography, Divider } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport Title from '../smallComponents/Title'\nimport ContractCreateStepper from '../smallComponents/ContractCreateStepper'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    mainGrid: {\n        flexGrow: 1,\n        marginTop: '50px'\n    },\n    subtitle:{\n        marginTop: '5px',\n        fontSize: '1.9rem'\n    }\n  }))\n\nconst ContractCreate = ({onCreateContract, AccountsToName, account}) => {\n\n    const classes = useStyles()\n\n    return (\n        <div className={classes.root}>\n            <Grid container direction='column' className={classes.mainGrid} spacing={2}>\n                <Title title={'Crate a Contract'}/>\n                    <Grid item sm={12} md={12} container>\n                        <Grid item sm={false} md={1}/>\n                        <Grid item sm={10} md={10}><ContractCreateStepper AccountsToName={AccountsToName} account={account} onCreateContract={onCreateContract}/></Grid>\n                        <Grid item sm={false} md={1}/>\n                    </Grid>\n                </Grid>\n        </div>\n    )\n}\n\nexport default ContractCreate","import { Grid, TextField, Paper, FormHelperText, InputLabel, Select, FormControl, MenuItem, Button } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { useState } from 'react'\n\nimport Title from '../smallComponents/Title'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        display: 'flex',\n    },\n    mainGrid: {\n        flexGrow: 1,\n        marginTop: '50px'\n    },\n    textField: {\n        marginLeft: theme.spacing(3),\n        marginTop: theme.spacing(1),\n        marginRight: theme.spacing(3),\n      },\n      button: {\n        marginTop: theme.spacing(3),\n        marginRight: theme.spacing(3),\n      },\n      title:{\n        marginTop: 5,\n        marginBottom: 2,\n    },\n    formControl: {\n        minWidth: 200,\n        marginLeft: theme.spacing(2),\n        marginTop: theme.spacing(1),\n        marginRight: theme.spacing(3),\n      },\n      buttonGrid: {\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'flex-start'\n      },\n  }))\n\n\nconst RequestTransaction = ({onTransaction, contracts, statusValues }) => {\n    const classes = useStyles()\n\n    const [contractId, setContractId] = useState('')\n    const [value, setValue] = useState('')\n\n    const onSubmit = (e) => {\n\n        e.preventDefault()\n\n        if(value ===0 ){\n            alert('Please complete the form to make a new transaction.')\n            return\n        }\n\n        const etherValue = window.web3.utils.toWei(value.toString(), 'Ether')\n    \n        onTransaction(contractId, etherValue)\n\n        setContractId('')\n        setValue(0)\n    }\n\n\n    return (\n        <div className={classes.root}>\n            <Grid container direction='column' className={classes.mainGrid} spacing={2}>\n                <Title title={'Request a Payment'}/>\n                    <Grid item sm={12} md={12} container>\n                        <Grid item sm={false} md={1}/>\n                        <Grid item sm={10} md={10} >\n                            <Paper className={classes.root}>\n                                <Grid className={classes.title} container spacing={8}>\n                                    <Grid item xs={12} md={4}>\n                                        <FormControl className={classes.formControl}>\n                                            <InputLabel >Contract</InputLabel>\n                                            <Select\n                                                required id=\"Contract Recipient\"\n                                                onChange={(e) => setContractId(e.target.value)}\n                                                >\n                                                {\n                                                contracts.map((contract, key) => {\n                                                    if(statusValues[0].Accepted === contract.statusName || statusValues.MissingPayments === contract.statusName){\n                                                        return <MenuItem key={key} value={contract.id}>{contract.name}</MenuItem>\n                                                    }\n                                                }\n                                                )\n                                                }\n                                            </Select>\n                                            <FormHelperText>Please select from the list of ColPay your ColPay Contracts</FormHelperText>\n                                        </FormControl>\n                                    </Grid>\n                                    <Grid item xs={12} md={4}>\n                                        <TextField \n                                            required id=\"ConractName\" \n                                            label=\"Value of Payment\"\n                                            placeholder='Enter the contract name' \n                                            value={value} \n                                            onChange={ (e) => setValue(e.target.value) }\n                                            fullWidth \n                                            className={classes.textField}\n                                            autoComplete=\"cc-number\" />\n                                    </Grid>\n                                    <Grid item xs={12} md={4} className={classes.buttonGrid}>\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            onClick={ onSubmit }\n                                            className={classes.button}\n                                        >\n                                        Create\n                                        </Button>\n                                    </Grid>\n                                </Grid>\n                            </Paper>\n                        </Grid>\n                        <Grid item sm={false} md={1}/>\n                    </Grid>\n                </Grid>\n        </div>\n    )\n}\n\nexport default RequestTransaction\n","import { Grid, Typography, Divider, Paper, Button, Avatar} from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport Title from '../smallComponents/Title'\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    mainGrid: {\n        flexGrow: 1,\n        marginTop: '50px'\n    },\n    subtitle: {\n        marginTop: '10px',\n        marginLeft: '15px'\n    },\n    low: {\n        display: 'flex',\n        alignItems: 'flex-end'\n    },\n    large: {\n        width: theme.spacing(7),\n        height: theme.spacing(7),\n        marginTop: 10,\n        marginBottom: 10,\n      },\n\n    stepper: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n    }\n  }))\n\nconst RecurringTransaction = () => {\n\n    const classes = useStyles()\n\n    const steps = [\n        {\n            icon: <Avatar alt=\"Details\" variant='square' className={classes.large} src=\"https://image.flaticon.com/icons/png/512/1484/1484924.png\" />,\n            title: '1. Details',\n            description: 'Tell us how much you want to transfer, and to which contract you want to assign it.'\n        },\n        {\n            icon: <Avatar alt=\"Set Up\" variant='square' className={classes.large} src=\"https://image.flaticon.com/icons/png/512/4220/4220467.png\" />,\n            title: '2. Set Up',\n            description: 'Set up a Standing Order from your Bank Account, so the funds are made available in the Platform.'\n        },\n        {\n            icon: <Avatar alt=\"Transfer\" variant='square' className={classes.large} src=\"https://image.flaticon.com/icons/png/512/2879/2879440.png\" />,\n            title: '3. We Transfer',\n            description: 'Each month, we transfer money for you, until your contract gets paid.'\n        },\n        {\n            icon: <Avatar alt=\"Fulfill\" variant='square' className={classes.large} src=\"https://image.flaticon.com/icons/png/512/1505/1505471.png\" />,\n            title: '4. Fulfillment',\n            description: 'After all payments are made your supplier will have received the full amount specified on the contract, and you only had to set it up once!'\n        },\n    ]\n\n    return (\n        <div className={classes.root}>\n            <Grid container direction='column' className={classes.mainGrid} spacing={2}>\n                <Title title={'Recurring Transactions'}/>\n                    <Grid item sm={12} md={12} container>\n                        <Grid item sm={false} md={1}/>\n                        <Grid item item sm={10} md={10} >\n                        <Paper>\n                        <Grid container spacing={2}>\n                            <Grid item sm={12}><Typography className ={classes.subtitle}>Save time and hassle by setting up a Recurring Transaction. Here's how it works.</Typography></Grid>\n                            <Grid item sm={12}><Divider variant='middle'/></Grid>\n                            <Grid item sm={12} container spacing={4}>\n                            \n                                {\n                                    steps.map((step, key) =>(\n                                        <Grid key={key} item sm={3}>\n                                            <div className={classes.stepper}>\n                                                {step.icon}\n                                                <Typography align='center' color='primary' variant='h6' gutterBottom>{step.title}</Typography>\n                                                <Typography variant='body2' align='center'>{step.description}</Typography>\n                                            </div>\n                                        </Grid>\n                                    ))\n                                }\n                            </Grid>\n                            <Grid item sm={12}><Divider variant='middle'/></Grid>\n                            <Grid item sm={12} >\n                                <div className={classes.low}>\n                                <Button className={classes.subtitle} variant=\"contained\" color=\"primary\" disabled >Get Started</Button>\n                                <Typography className={classes.subtitle} variant=\"caption\" color='textSecondary'>* This feature is not available in the prototype</Typography>\n                                </div>\n                            </Grid>\n                        </Grid>\n                        </Paper>\n                        </Grid>\n                        <Grid item sm={false} md={1}/>\n                    </Grid>\n                </Grid>\n        </div>\n    )\n}\n\nexport default RecurringTransaction","import React from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { LineChart, Line, XAxis, YAxis, Label, ResponsiveContainer } from 'recharts';\n\nimport { Typography} from '@material-ui/core'\n// Generate Sales Data\nfunction createData(time, amount) {\n  return { time, amount };\n}\n\nconst data = [\n  createData(1, 0),\n  createData(3, 300),\n  createData(6, 600),\n  createData(9, 800),\n  createData(12, 1500),\n  createData(15, 2000),\n  createData(18, 2400),\n  createData(24, 2400),\n];\n\nexport default function Chart() {\n  const theme = useTheme();\n\n  return (\n    <React.Fragment>\n      <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      Contracts Fulfilled over the Past Week\n    </Typography>\n      <ResponsiveContainer>\n        <LineChart\n          data={data}\n          margin={{\n            top: 16,\n            right: 16,\n            bottom: 0,\n            left: 24,\n          }}\n        >\n          <XAxis stroke={theme.palette.text.secondary} >\n\n            </XAxis>\n          <YAxis stroke={theme.palette.text.secondary}>\n            <Label\n              angle={270}\n              position=\"left\"\n              style={{ textAnchor: 'middle', fill: theme.palette.text.primary }}\n            >\n              Transactions (Eth)\n            </Label>\n          </YAxis>\n          <Line type=\"monotone\" dataKey=\"amount\" stroke={theme.palette.primary.main} dot={false} />\n        </LineChart>\n      </ResponsiveContainer>\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\nfunction preventDefault(event) {\n  event.preventDefault();\n}\n\nconst useStyles = makeStyles({\n  depositContext: {\n    flex: 1,\n  },\n});\n\nexport default function Deposits() {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      Last Payment\n    </Typography>\n      <Typography component=\"p\" variant=\"h3\">\n        30 Eth\n      </Typography>\n      <Typography color=\"textSecondary\" className={classes.depositContext}>\n        on 1 June, 2021\n      </Typography>\n      <div>\n        <Link color=\"primary\" href=\"#\" onClick={preventDefault}>\n          View transactions\n        </Link>\n      </div>\n    </React.Fragment>\n  );\n}","import { Grid, Typography, Paper } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport Title from '../smallComponents/Title'\nimport Chart from '../smallComponents/Chart'\nimport Deposits from '../smallComponents/Deposits'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    mainGrid: {\n        flexGrow: 1,\n        marginTop: '50px'\n    },\n    subtitle:{\n        marginTop: '5px',\n        fontSize: '1.9rem'\n    },\n    fixedHeightPaper: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column',\n        height: 300,\n      },\n  }))\n\nconst Trends = () => {\n\n    const classes = useStyles()\n\n    return (\n        <div className={classes.root}>\n            <Grid container direction='column' className={classes.mainGrid} spacing={2}>\n                <Title title={'Trends'}/>\n                    <Grid item sm={12} md={12} container spacing={2}>\n                        <Grid item sm={false} md={1}/>\n                        <Grid item sm={8} md={7}>\n                            <Paper className={classes.fixedHeightPaper}>\n                                <Chart/>\n                            </Paper>\n                        </Grid>\n                        <Grid item sm={2} md={3}>\n                            <Paper className={classes.fixedHeightPaper}>\n                                <Deposits />\n                            </Paper>\n                        </Grid>\n                        <Grid item sm={false} md={1}/>\n                    </Grid>\n                </Grid>\n        </div>\n    )\n}\n\nexport default Trends","// Library Elements\nimport { useEffect, useState } from 'react'\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom'\nimport { Typography, Grid } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\n\n// Smart Contract\nimport ColPay from '../../abis/ColPay.json'\nimport CPToken from '../../abis/CPToken.json'\nimport Web3 from 'web3'\n\n// Components\nimport Drawer from './Drawer'\nimport MyAccount from './MyAccount'\nimport ContractsOverview from './ContractsOverview'\nimport ContractsReview from './ContractsReview'\nimport TransactionsOverview from './TransactionsOverview'\nimport RecipientsOverview from './RecipientsOverview'\nimport ContractCreate from './ContractCreate'\nimport RequestTransaction from './RequestTransaction'\nimport RecurringTransactions from './RecurringTransactions'\nimport Trends from './Trends'\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n}))\n\nconst ColPayAppLogic = ({paths, onLoadAccount, mobileOpen, handleDrawerToggle, AccountsToName, accountName}) => {\n\n  const classes = useStyles()\n\n  const[colPay, setColPay] = useState({})\n  const[cpToken, setCPToken] = useState({})\n\n  const[cpTokenBalance, setCPTokenBalance] = useState(0)\n  const[account, setAccount] = useState('')\n  //const[contractCount, setContractCount] = useState(0)\n  const[contracts, setContracts] = useState([])\n  const[isBlocked, setIsBlocked] = useState(false)\n  const[incurredDebt, setIncurredDebt] = useState(0)\n  const[potentialDebt, setPotentialDebt] = useState(0)\n\n  const[balanceEther, setBalanceEther] = useState(0)\n  const[incurredDebtEther, setIncurredDebtEther] = useState(0)\n  const [potentialDebtEther, setPotentailDebtEther] = useState(0)\n\n  const[loading, setLoading] = useState(true)\n  const[reload, setReload] = useState(true)\n\n  const statusValues = useState(\n    {\n      NotReviewed: 'Not Reviewed', \n      Rejected: 'Rejected', \n      Accepted: 'Accepted', \n      Fulfilled: 'Fulfilled', \n      MissingPayments: 'Missing Payment'\n    }\n    )\n\n    const statusEnumValues =\n      {\n        0: 'Not Reviewed', \n        1: 'Rejected', \n        2: 'Accepted', \n        3: 'Fulfilled', \n        4: 'Missing Payment'\n      }\n\n\n  // Function called every render. Or whenever change in a value of the array\n\n  useEffect(()=>{\n\n    const getBlockChainData = async ()=> {\n      await loadWeb3()\n      \n      const [colPay, cpToken] = await loadSmartContracts()\n      setColPay(colPay)\n      setCPToken(cpToken)\n\n      const accounts = await window.web3.eth.getAccounts()\n      setAccount(accounts[0])\n      onLoadAccount(accounts[0])\n    }\n\n    getBlockChainData()\n    setLoading(false)\n\n  }, [])\n\n  useEffect(()=>{\n\n    if(account){\n\n      let getAccountData = async () =>{\n\n        //console.log(\"trigger\")\n\n        const cpTokenBalance = await cpToken.methods.balanceOf(account).call()\n        setCPTokenBalance(cpTokenBalance)\n        setBalanceEther(Math.round(window.web3.utils.fromWei(cpTokenBalance.toString(), 'Ether') * 100)/100)  \n        \n        const contractCount = await colPay.methods.getContractNumber(account).call()\n        //setContractCount(contractCount)\n\n        let contractsToUpdate = []\n\n        for(let id = 0; id < contractCount; id++){\n          const contractID = await colPay.methods.paymentContractsHeldPerAddress(account, id).call()\n          const contract = await colPay.methods.paymentContracts(contractID).call()\n\n          contract.accountName = accountName\n\n          contract.totalEther = Math.round(window.web3.utils.fromWei(contract.totalAmount.toString(), 'Ether') * 100)/100\n          contract.paidEther = Math.round(window.web3.utils.fromWei(contract.amountPaid.toString(), 'Ether') *100)/100\n\n          const status = statusEnumValues[contract.status]\n          contract.statusName = status\n\n          const start = new Date(contract.startDate*1000)\n          const startMonth = start.getMonth() +1\n          const startDate = start.getDate() + '/' + startMonth +  '/' + start.getFullYear()\n          contract.startDateFormat = startDate\n          \n          const expires = new Date(contract.expiryDate*1000)\n          const endMonth = expires.getMonth() +1\n          const expiryDate = expires.getDate() + '/' + endMonth +  '/' + expires.getFullYear()\n          contract.expiryDateFormat = expiryDate\n          \n          const transactionsCount = await colPay.methods.getTransactionNumber(contractID).call()\n          const transactions = []\n\n          for (let key = 0; key < transactionsCount; key++){\n            const contractTransactions = await colPay.methods.transactionLists(contractID, key).call()\n            const date = new Date(contractTransactions.date*1000)\n            const dateMonth = date.getMonth() +1\n            const dateFormat = date.getDate() + '/' + dateMonth +  '/' + date.getFullYear()\n\n            contractTransactions.dateFormat = dateFormat\n            contractTransactions.valueEther = window.web3.utils.fromWei(contractTransactions.value.toString(), 'Ether')\n\n            transactions.push(contractTransactions)\n          }\n          contract.transactions = transactions\n\n          let recipient, recipientName\n          if (contract.createdBySeller){\n            recipient = contract.buyer\n            recipientName = AccountsToName[0][contract.buyer]\n          }else {\n            recipient = contract.seller\n            recipientName = AccountsToName[0][contract.seller] \n          }\n          contract.recipient = recipient\n          contract.recipientName = recipientName\n\n          let partner, partnerName\n          if (account == contract.seller){\n            partner = contract.buyer\n            partnerName = AccountsToName[0][contract.buyer]\n          }else {\n            partner = contract.seller\n            partnerName = AccountsToName[0][contract.seller] \n          }\n          contract.partner = partner\n          contract.partnerName = partnerName\n\n          contractsToUpdate.push(contract)\n        }\n\n        setContracts(contractsToUpdate)\n\n        const isBlocked = await colPay.methods.isBlocked(account).call()\n        setIsBlocked(isBlocked)\n\n        const incurredDebt = await colPay.methods.incurredDebt(account).call()\n        setIncurredDebt(incurredDebt)\n        setIncurredDebtEther(Math.round(window.web3.utils.fromWei(incurredDebt.toString(), 'Ether')*100)/100)\n\n        const potentialDebt = await colPay.methods.potentialDebt(account).call()\n        setPotentialDebt(potentialDebt)\n        setPotentailDebtEther(Math.round(window.web3.utils.fromWei(potentialDebt.toString(), 'Ether')*100)/100)\n\n      }\n\n      getAccountData()\n\n    }\n\n  }, [account, reload])\n\n  const loadWeb3 = async()=>{\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum)\n    }\n    else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider)\n    }\n    else {\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n    }\n  }\n\n  const loadSmartContracts = async()=> {\n\n    const networkId = await window.web3.eth.net.getId()\n\n    let colPay, cpToken\n\n    // Load CP Tokens\n    try {\n      cpToken = new window.web3.eth.Contract(CPToken.abi, CPToken.networks[networkId].address)\n    } catch (e) {\n      window.alert('CPToken contract not deployed to detected network.')\n      console.error(e)\n    }\n    // Load Smart Contract(s)\n    try{\n      colPay = new window.web3.eth.Contract(ColPay.abi, ColPay.networks[networkId].address)\n    } catch(e){\n      window.alert('Contract not deployed to detected network.')\n      console.error(e)\n    }\n    return [colPay, cpToken]\n  }\n\n  const createPaymentContract = async (name, totalAmount, recipient, start, expire, daysToOpen, speed, createdBySeller) => {\n\n    setLoading(true)\n\n    colPay.methods.createPaymentContract(name, totalAmount, recipient, start, expire, daysToOpen, speed, createdBySeller).send({from: account})\n\n    .once('receipt', (receipt) => {\n      setLoading(false)\n      setReload(!reload)\n    })\n\n  }\n\n  const acceptContract = async (id)=>{\n    setLoading(true)\n\n    colPay.methods.acceptPaymentContract(id).send({from: account})\n\n    .once('receipt', (receipt) => {\n      setLoading(false)\n      setReload(!reload)\n    })\n  }\n\n  const rejectContract = async (id)=>{\n    setLoading(true)\n\n    colPay.methods.rejectPaymentContract(id).send({from: account})\n\n    .once('receipt', (receipt) => {\n      setLoading(false)\n      setReload(!reload)\n    })\n  }\n\n  const makeTransaction = async (id, value)=>{\n    setLoading(true)\n\n    colPay.methods.makeTransaction(id, value).send({from: account})\n\n    .once('receipt', (receipt) => {\n      setLoading(false)\n      setReload(!reload)\n    })\n  }\n\n  return (\n    <div className={classes.root}>\n      \n      <Drawer mobileOpen={mobileOpen} handleDrawerToggle={handleDrawerToggle} paths={paths}/>\n\n      <Switch>\n      { paths[0].appMain === window.location.pathname && <Route render={()=>(<Redirect to={paths[0].appMyAccount}/>)} /> }\n        <Route exact path={paths[0].appMyAccount}>\n          <MyAccount \n            account={account} \n            contracts={contracts} \n            balance={balanceEther} \n            isBlocked={isBlocked} \n            incurredDebt={incurredDebtEther} \n            potentialDebt={potentialDebtEther}\n            statusValues={statusValues}\n            paths={paths}\n          />\n        </Route>\n\n        <Route exact path={paths[0].appReviewContract} component={()=>{\n          if (loading){\n            return (<Typography variant='h2'>Loading...</Typography>)\n          }else {\n            return (\n              <ContractsReview \n                contracts={contracts} \n                statusValues={statusValues}\n                account = {account}\n                onAccept = {acceptContract}\n                onReject = {rejectContract}\n                isBlocked={isBlocked}\n              />\n            )\n          }\n        }} /> \n\n        <Route exact path={paths[0].appCreateContract} component={()=>{\n          if (loading){\n            return (<Typography variant='h2'>Loading...</Typography>)\n          }else {\n            return (\n              <ContractCreate \n              onCreateContract={createPaymentContract} \n              isBlocked={isBlocked}\n              AccountsToName={AccountsToName}\n              account={account}\n              />\n            )\n          }\n        }} /> \n\n        <Route exact path={paths[0].appContractsOverview}>\n             <ContractsOverview\n                contracts={contracts} \n                statusValues={statusValues}\n              />\n        </Route> \n\n        <Route exact path={paths[0].appTransactions}>\n             <TransactionsOverview\n                contracts={contracts} \n                account={account}\n              />\n        </Route> \n\n        <Route exact path={paths[0].appRecipients}>\n             <RecipientsOverview\n                contracts={contracts} \n                statusValues={statusEnumValues}\n              />\n        </Route> \n\n        <Route exact path={paths[0].appRecurring}>\n             <RecurringTransactions\n              />\n        </Route> \n\n        <Route exact path={paths[0].appTrends}>\n             <Trends\n              />\n        </Route> \n\n        <Route exact path={paths[0].appRequest} component={()=>{\n          if (loading){\n            return (<Typography variant='h2'>Loading...</Typography>)\n          }else {\n            return (\n              <RequestTransaction \n              onTransaction={makeTransaction}\n              contracts={contracts} \n              statusValues={statusValues}\n              />\n            )\n          }\n        }} /> \n\n      </Switch>\n      \n    </div>\n  );\n}\n\nexport default ColPayAppLogic;\n\n/*\nCode for daily execution\nconst { EAC, Util } = require('@ethereum-alarm-clock/lib');\nconst moment = require('moment');\n\nconst web3 = Util.getWeb3FromProviderUrl('ws://localhost:8545');\n\nconst eac = new EAC(web3);\n\nasync function scheduleTransaction() {\n    const receipt = await eac.schedule({\n        toAddress: '0xe87529A6123a74320e13A6Dabf3606630683C029',\n        windowStart: moment().add('1', 'day').unix() // 1 day from now\n    });\n\n    console.log(receipt);\n}\n\nscheduleTransaction();\n\n*/\n\n      /*\n      // Can also fetch objects inside Blockchain\n      // One Object:\n      let variable = await colPay.methods.aMethod(this.state.userAddress).call()\n      this.setState({ stateVariable: variable.toString() })\n\n      // Several Objects:\n      for (var i= 1; i <= aNumberForMappingLength; i++){\n        const variable = await marketplace.methods.mappingVariable(i).call()\n        this.setState({\n          // adding to array\n          array: [...this.state.array, variable]\n        })\n      }\n      */","import React from \"react\"\nimport { useState, useEffect } from 'react'\nimport { Link as RouterLink, useHistory } from 'react-router-dom'\nimport { Link as ScrollLink} from \"react-scroll\";\nimport { AppBar, Toolbar, MenuItem, Menu, Link, Button, Tabs, Tab, Collapse, Typography, IconButton } from \"@material-ui/core\"\nimport { makeStyles } from '@material-ui/core/styles'\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport classNames from 'classnames'\n\n\nconst useStyles = makeStyles((theme) => ({\n  toolbar: theme.mixins.toolbar,\n  grow: {\n    flexGrow: 1,\n  },\n  zIndex: {\n    zIndex: 1300,\n  },\n  hide: {\n    display: 'none',\n  },\n  tabs: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'inline-flex',\n    },\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'inline-flex',\n    },\n\n    flexGrow: 0,\n    width: 'auto',\n    marginRight: theme.spacing(8),\n    marginLeft: theme.spacing(6),\n\n  },\n  sectionDesktop: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end'\n  },\n  navLink: {\n    textAlign: 'center',\n    marginRight: theme.spacing(4),\n    minWidth: '100px',\n    display: 'block'\n  },\n  button: {\n    display: 'flex',\n  },\n  idMenuItem:{\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'flex-start',\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"none\"\n    }\n  },\n}));\n\nconst Navbar = ({account, accountName, handleDrawerToggle, paths}) => {\n\n  const classes = useStyles()\n  let history = useHistory();\n\n  const [anchorEl, setAnchorEl] = useState(null)\n\n  useEffect(() => {\n    const path = window.location.pathname\n    if(path===paths[0].home){\n      setShowLandingPage(true)\n    }else{\n      setShowLandingPage(false)\n    }\n  }, [])\n\n  \n  const [showLandingPage, setShowLandingPage] = useState(()=>{\n    const path = window.location.pathname\n    if(path===paths[0].appMain){\n      return false\n    }else{\n      return true\n    }\n  })\n\n  const [selectedTab, setSelectedTab] = useState(0)\n\n  const isMenuOpen = Boolean(anchorEl)\n\n  const handleChange = (event, newSelectedTab) => {\n\n    if(selectedTab === newSelectedTab){\n      setSelectedTab(0)\n      history.push(paths[0].appMyAccount)\n    }\n    else if (newSelectedTab === 1){\n      setSelectedTab(newSelectedTab)\n      history.push(paths[0].appHelp)\n    }\n    else if (newSelectedTab === 2){\n      setSelectedTab(newSelectedTab)\n      history.push(paths[0].appTrends)\n    }\n  };\n\n  const handleLandingChange = (event, newSelectedTab) => {\n\n    setSelectedTab(newSelectedTab)\n  };\n\n  const handleProfileMenuOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleLogOut = () => {\n    handleMenuClose();\n    setShowLandingPage(!showLandingPage)\n  };\n\n  const menuId = 'primary-search-account-menu';\n  const renderMenu = (\n    <Menu\n      TransitionComponent={Collapse}\n      className={classes.dropDown}\n      style={{marginTop: '53px'}}\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem disabled className={classes.idMenuItem}>\n        <Typography variant='caption'>ColPay ID</Typography>\n        <Typography variant='overline'>{account}</Typography>\n        </MenuItem>\n      {/*<MenuItem component={RouterLink} to= {paths[0].appMyProfile} onClick={handleMenuClose}>My Profile</MenuItem>*/}\n      <MenuItem component={RouterLink} to= {paths[0].home} onClick={handleLogOut}>Logout</MenuItem>\n    </Menu>\n  );\n\n  return (\n    <div className={classes.grow}>\n      <div className={classes.toolbar} />\n      <AppBar position='fixed' elevation={0} className={classes.zIndex}>\n        <Toolbar >\n          <IconButton\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              edge=\"start\"\n              onClick={handleDrawerToggle}\n              className={classes.menuButton}\n            >\n              <MenuIcon />\n            </IconButton>\n          <Link component={RouterLink} to= {paths[0].home} variant='h4' color=\"inherit\" className={classes.title} style={{ color: 'inherit', textDecoration: 'inherit'}} onClick={()=>{setSelectedTab(0);setShowLandingPage(true)}}>\n            COLPAY\n          </Link>\n          <div className={classes.grow}>\n            {showLandingPage\n            ?\n              <div className={classes.sectionDesktop}>\n                <Tabs value={selectedTab} onChange={handleLandingChange}>\n                  <Tab label='Home' className={classes.hide} component={ScrollLink} to=\"home\" activeClass=\"active\" spy={true} smooth={true} offset={-100} duration={500} style={{ color: 'inherit', textDecoration: 'inherit'}}/>\n                  <Tab label='About' className={classes.tabs} component={ScrollLink} to=\"about\" activeClass=\"active\" spy={true} smooth={true} offset={-100} duration={500} style={{ color: 'inherit', textDecoration: 'inherit'}}/>\n                  <Tab label='Services' className={classes.tabs} component={ScrollLink} to=\"services\" activeClass=\"active\" spy={true} smooth={true} offset={-100} duration={500} style={{ color: 'inherit', textDecoration: 'inherit'}}/>\n                  <Tab label='Contact' className={classes.tabs} component={ScrollLink} to=\"contact\" activeClass=\"active\" spy={true} smooth={true} offset={-100} duration={500} style={{ color: 'inherit', textDecoration: 'inherit'}}/>\n                </Tabs>\n                <div className={classNames(classes.grow, classes.sectionDesktop)}>\n                  <Button component={RouterLink} to={paths[0].appMain}  size='large' color=\"inherit\" variant=\"outlined\" className={classes.navLink} onClick={()=>{setShowLandingPage(!showLandingPage)}}>\n                    Log In\n                  </Button>\n                  <Button component={RouterLink} to={paths[0].appMain}  size='large' color=\"secondary\" variant=\"contained\" className={classes.navLink} onClick={()=>{setShowLandingPage(!showLandingPage)}}>\n                    Sign Up\n                  </Button>\n                </div>\n              </div>\n            :\n              <div className={classes.sectionDesktop}>\n                {\n                <Tabs value={selectedTab} onChange={handleChange}>\n                <Tab label='Home' className={classes.hide} component={RouterLink} to={paths[0].appReviewContract} activeClass=\"active\" spy={true} smooth={true} offset={-100} duration={500} style={{ color: 'inherit', textDecoration: 'inherit'}}/>\n                  <Tab label='Help & Support' className={classes.tabs} activeClass=\"active\" spy={true} smooth={true} offset={-100} duration={500} style={{ color: 'inherit', textDecoration: 'inherit'}}/>\n                  <Tab label='Trends' className={classes.tabs} activeClass=\"active\" spy={true} smooth={true} offset={-100} duration={500} style={{ color: 'inherit', textDecoration: 'inherit'}} \n                  classes={{\n                    wrapper: classes.iconLabelWrapper,\n                    labelContainer: classes.labelContainer\n                  }}/>\n                </Tabs>\n                }\n                <div className={classNames(classes.grow, classes.sectionDesktop)}>\n                  <Button\n                    className={classNames(classes.navLink, classes.button)}\n                    variant=\"outlined\"\n                    size='medium'\n                    edge=\"end\"\n                    aria-label=\"account of current user\"\n                    aria-controls={menuId}\n                    aria-haspopup=\"true\"\n                    onClick={handleProfileMenuOpen}\n                    color=\"inherit\"\n                    endIcon={<ArrowDropDownIcon/>}\n                  >\n                    {accountName}\n                  </Button>\n                </div>\n              </div>\n            }\n          </div>\n        </Toolbar>\n      </AppBar>\n      {renderMenu}\n    </div>\n    );\n}\n\nexport default Navbar;","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Link from \"@material-ui/core/Link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Box from \"@material-ui/core/Box\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://gonzalocalleja.github.io/ColPay/\">\n        ColPay\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  \"@global\": {\n    ul: {\n      margin: 0,\n      padding: 0,\n      listStyle: \"none\"\n    }\n  },\n  background: {\n    backgroundColor: theme.palette.grey[200],\n    borderTop: `1px solid ${theme.palette.divider}`,\n    marginTop: theme.spacing(20),\n  },\n  footer: {\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3),\n    [theme.breakpoints.up(\"sm\")]: {\n      paddingTop: theme.spacing(4),\n    },\n    \n  }\n}));\n\nconst footers = [\n  {\n    title: \"Company\",\n    description: [\"Team\", \"History\", \"Contact us\", \"Locations\"]\n  },\n  {\n    title: \"Features\",\n    description: [\n      \"Digital Wallet\",\n      \"Blockchain Updates\",\n      \"Payments Data Analytics\",\n    ]\n  },\n  {\n    title: \"Legal\",\n    description: [\"Privacy policy\", \"Terms of use\"]\n  }\n];\n\nexport default function Pricing() {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment >\n      <div className={classes.background}>\n      <Container maxWidth=\"md\" component=\"footer\" className={classes.footer}>\n        <Grid container spacing={4} justify=\"space-evenly\">\n          {footers.map((footer) => (\n            <Grid item xs={6} sm={3} key={footer.title}>\n              <Typography variant=\"h6\" color=\"textPrimary\" gutterBottom>\n                {footer.title}\n              </Typography>\n              <ul>\n                {footer.description.map((item) => (\n                  <li key={item}>\n                    <Link href=\"#\" variant=\"subtitle1\" color=\"textSecondary\">\n                      {item}\n                    </Link>\n                  </li>\n                ))}\n              </ul>\n            </Grid>\n          ))}\n        </Grid>\n        <Box mt={5}>\n          <Copyright />\n        </Box>\n      </Container>\n      </div>\n    </React.Fragment>\n  );\n}","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n    const { pathname } = useLocation();\n  \n    useEffect(() => {\n      window.scrollTo(0, 0);\n    }, [pathname]);\n  \n    return null;\n  }","// Library Elements\nimport { useState } from 'react'\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom'\nimport { CssBaseline } from '@material-ui/core'\n\n// Components\nimport LandingPage from './mainComponents/LandingPage.js'\nimport ColPayAppLogic from './mainComponents/ColPayAppLogic.js'\nimport Navbar from './mainComponents/Navbar.js'\nimport Footer from './mainComponents/Footer.js'\nimport ScrollToTop from './smallComponents/ScrollToTop.js'\n\nconst App = () => {\n\n    const [account, setAccount] = useState('0x0')\n    const [accountName, setAccountName] = useState('')\n\n\n    const paths = useState(\n        {\n        home: '/',\n        appMain: '/app',\n        appMyAccount: '/app/my-account',\n        appMyProfile: '/app/my-profile',\n        appCreateContract: '/app/create-contract',\n        appReviewContract: '/app/review-contract',\n        appUpload: '/app/upload-invoice',\n        appRequest: '/app/request-payment',\n        appRecurring: '/app/recurring-transaction',\n        appTransactions: '/app/all-transactions',\n        appContractsOverview: '/app/all-conracts',\n        appRecipients: '/app/view-recipients',\n        appMore: '/app/more',\n        appTrends: '/app/Trends',\n        appHelp: '/app/Help'\n        }\n    )\n    // This information would live in ColPays backend and be secured in normal application.\n    const AccountsToName = useState({\n        '0x60E497A5d341C41C831B3A3929ac096003418563': 'ColPay Admin',\n        '0xcA6ac89A2B341B5a587b76e643c18f9F3AbFC2a2': 'Marcus Flanagan',\n        '0x04740fBec153a27E49DC58f85608B23FBDbd3458': 'Gonzalo Calleja',\n        '0x1686756Cf005277db353ACde42dd466A4c9233D2': 'Joe Maisy',\n        '0x68825B1a6a4101Aa84C060C7FBb75aA22b1a70ad': 'Sara Clarke',\n        '0xcaB9c47345A384ed10B01B6382E4Aa11228A48DF': 'Peter Sykes',\n        '0xaCFB095BC6AC0F2B258bA4E11D3b61Bb71D85dB2': 'Claire Du Bois',\n        '0x72396Ab101470cfe264E11c4E2c4fF381A60Eb1e': 'Jean Doe',\n        '0x8339f82b9bcC39FDF85901daCABD395F20688DB0': 'Chris Collins',\n        '0xFd7acFdb450b6c15D0bA5Aa8599518aF6400239C': 'Duarte Gross'\n    })\n\n    const onLoadAccount = async (newAccount)=>{\n        setAccount(newAccount)\n        setAccountName(AccountsToName[0][newAccount])\n    }    \n\n    const [mobileOpen, setMobileOpen] = useState(false)\n    const handleDrawerToggle = () => {\n        setMobileOpen(!mobileOpen);\n    };\n    \n    return (\n        <div>\n            <CssBaseline />\n            <Router>\n                <ScrollToTop />\n                <Navbar account={account} accountName={accountName} handleDrawerToggle={handleDrawerToggle} paths={paths}/>\n                <div>\n                    { !Object.values(paths[0]).includes(window.location.pathname) && <Route render={()=>(<Redirect to={paths[0].home}/>)} /> }\n                    <Switch>\n                        <Route path={paths[0].home} exact component={LandingPage} /> \n                        <Route path={paths[0].appMain} component={()=>{return(<ColPayAppLogic AccountsToName={AccountsToName} paths={paths} onLoadAccount={onLoadAccount} accountName={accountName} mobileOpen={mobileOpen} handleDrawerToggle={handleDrawerToggle}/>)}} />\n                    </Switch>\n                </div>\n                <Footer paths={paths}/>\n            </Router>\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.1/8 is considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready.then(registration => {\n        registration.unregister();\n      });\n    }\n  }\n  ","import { createMuiTheme } from '@material-ui/core/styles';\nimport purple from '@material-ui/core/colors/purple';\nimport green from '@material-ui/core/colors/green';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#3a8f69'\n    },\n    secondary: {\n      main: '#fff',\n    },\n\n  },\n  mixins: {\n    toolbar:{\n      minHeight: 100,\n    }\n  }\n});\n\nexport default theme\n\n/*\n\ndark: #333333\nbackground: #FCFAF9\nother background: #E6E8E3\n\n*/\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { ThemeProvider } from '@material-ui/core/styles'\nimport theme from './theme'\n\nconst rootElement = document.getElementById('root')\n\nReactDOM.render(\n    <React.StrictMode>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n    </React.StrictMode>,\n    rootElement\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}